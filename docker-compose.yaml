version: "3"
services:
  strapi:
    container_name: ftw_strapi
    build:
      context: ./strapi
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file: ./strapi/.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock # Replace with package-lock.json if using npm
      - ./strapi/.env:/opt/app/.env
    ports:
      - "1337:1337"
    networks:
      - ftw
    depends_on:
      - postgres

  postgres:
    image: postgres:12.0-alpine
    container_name: ftw_postgres
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      #- strapi-data:/var/lib/postgresql/data/ #using a volume
      - ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - ftw
  adminer:
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    container_name: ftw_adminer
    image: adminer
    restart: always
    depends_on:
      - postgres
    ports:
      - 8080:8080
    networks:
      - ftw
#volumes:
#    strapi-data:

networks:
  ftw:
    name: Food Guide Toolkit Website
    driver: bridge
